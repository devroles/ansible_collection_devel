name: Test with Ansible

"on":
  push:
    paths-ignore:
      - README.md
      - LICENSE
  pull_request:
  schedule:
    - cron: "12 0 * * *"

env:
  TOX_ANSIBLE_DRIVER: docker
  ANSIBLE_COLLECTIONS_PATHS: ~/.ansible/:~/work/
  checkout_path: ansible_collections/devroles/devel

jobs:
  collect:
    runs-on: ubuntu-latest
    outputs:
      scenarios: ${{ steps.collection.outputs.scenarios }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          set -ex
          python -m pip install --upgrade tox
      - name: Collect dependencies
        id: collection
        run: |
          set -ex
          json="$(tox -ql --ansible-driver podman | python -c 'import json; import sys; print(json.dumps(sys.stdin.read().strip().split("\n")))')"
          echo "::set-output name=scenarios::${json}"

  build:
    needs: collect
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        scenario: ${{ fromJson(needs.collect.outputs.scenarios) }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          path: ${{ env.checkout_path }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          set -ex
          python -m pip install --upgrade tox
      - name: Run tox against ${{ matrix.scenario }}
        run: |
          set -ex
          # Something magical happens here with the "mv" command
          mv ansible_collections ~/work/
          cd ~/work/${{ env.checkout_path }}
          tox -e "${{ matrix.scenario }}"

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')  # Only release tagged versions
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: artis3n/ansible_galaxy_collection@v2.2.1
        with:
          api_key: ${{ secrets.GALAXY_API_KEY }}
      - name: Release artifacts to Github
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./devroles-devel*.tar.gz
          allowUpdates: true
          name: Release ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
